In this programming assignment, you will implement a simplified TCP­like transport layer protocol. Your protocol should provide reliable, in order delivery of a stream of bytes. It should recover from in­network packet loss, packet corruption, packet duplication and packet reordering and should be able cope with dynamic network delays. However, it doesn’t need to support congestion or flow control.
To test your implementation you will use a link emulator provided by us (see proxy.zip under Programming Assignment 2; contains a README that guides usage). Data is exchanged via UDP, i.e., you will be running your TCP version "on top of" UDP. In the real­world, a network can drop, corrupt, reorder, duplicate and delay packets. To mimic this behavior you will use the link emulator. Specifically, you will invoke the emulator so that it lies in the sender­to­receiver path, whereas the acknowledgements (i.e., the packets on the receiver­to sender path) will be sent directly from the receiver to the sender, i.e., you can assume that packets arrive without a loss on this path.